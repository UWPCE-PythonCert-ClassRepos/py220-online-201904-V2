I'm better at this than I thought.

But seriously, my first guess at how this all works was correct.  So, that was
something.

My timing functions worked okay:
_import_csv, 0.04663419723510742, (0, 0, 0)
_add_bulk_data, 0.5068647861480713, (9999, 0, 0)
_import_csv, 0.1139678955078125, (9999, 0, 0)
_add_bulk_data, 0.6304810047149658, (9999, 9999, 0)
_import_csv, 0.11076807975769043, (9999, 9999, 0)
_add_bulk_data, 0.6489100456237793, (9999, 9999, 9999)
import_data, 1.989346981048584, (9999, 9999, 9999)
show_available_products, 0.1781151294708252, (9999, 9999, 9999)
show_available_products, 0.1479511260986328, (9999, 9999, 9999)
show_rentals, 0.15012121200561523, (9999, 9999, 9999)
show_rentals, 0.1488959789276123, (9999, 9999, 9999)
clear_data, 0.08509588241577148, (0, 0, 0)

Thinking about trying to thread the import data just to try to shave some time
off.  Not sure if I can thread a variable population.  I'll write more as I try.

So here's my threaded one:
_import_csv, 0.042054176330566406, (0, 0, 0)
_add_bulk_data, 0.4777040481567383, (9999, 0, 0)
_import_csv, 0.09218478202819824, (9999, 0, 0)
_add_bulk_data, 0.6006519794464111, (9999, 9999, 0)
_import_csv, 0.09079289436340332, (9999, 9999, 0)
_add_bulk_data, 0.5322070121765137, (9999, 9999, 9999)
import_data, 1.7103869915008545, (9999, 9999, 9999)
show_available_products, 0.15848088264465332, (9999, 9999, 9999)
show_available_products, 0.13692593574523926, (9999, 9999, 9999)
show_rentals, 0.12518095970153809, (9999, 9999, 9999)
show_rentals, 0.15438008308410645, (9999, 9999, 9999)
clear_data, 0.0928640365600586, (0, 0, 0)

So, either I didn't do this right, which is possible... or the nature of the
written functions or data set is such that threading is superfluous.

In either case, pytest cam out all right, and I'm pleased with that.  
